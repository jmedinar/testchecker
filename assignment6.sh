#!/usr/bin/env bash
# Script: assignment5.sh
# Author: Professor Juan Medina
# Email: jmedina@collin.edu
# Date: 08/06/2025

# --- Configuration ---

assignment=6
correct_answers=0
total_questions=0

# Base directories
scripts_dir="/home/${SUDO_USER}/scripts"
reports_dir="/home/${SUDO_USER}/reports"
script_path="${scripts_dir}/report.sh"
output_path="${reports_dir}/script-output.log"

# Color Codes
CR='\e[0;31m' # Red
CG='\e[0;32m' # Green
CY='\e[0;33m' # Yellow
CL='\e[0;34m' # Blue
CP='\e[0;35m' # Purple
CC='\e[0;36m' # Cyan
CW='\e[0;37m' # White (reset)

ENCODER_SCRIPT_URL="https://raw.githubusercontent.com/jmedinar/testchecker/main/encoder.sh"

# --- Helper Functions ---

function _msg() {
   echo -ne "${CY}Checking: ${1}... ${CW}" 
   ((total_questions++))
}

function _pass() {
   echo -e "${CG}PASS${CW}"
   ((correct_answers++))
}

function _fail() {
   echo -e "${CR}FAIL${CW}"
}

function _print_line() {
    printf "${CC}%0.s=" {1..80}
    printf "${CW}\n"
}

# --- Verification Logic ---

_print_line
echo -e "${CP}Assignment ${assignment} Verification Started${CW}"
_print_line

# 1. Check for scripts directory
_msg "Directory '~/scripts' exists"
if [[ -d "${scripts_dir}" ]]; then
    _pass
else
    _fail
fi

# 2. Check for reports directory
_msg "Directory '~/reports' exists"
if [[ -d "${reports_dir}" ]]; then
    _pass
else
    _fail
fi

# 3. Check for script file
_msg "Script file '~/scripts/report.sh' exists"
if [[ -f "${script_path}" ]]; then
    _pass
else
    _fail
fi

# 4. Check for shebang
_msg "Script has a correct shebang line"
if head -n 1 "${script_path}" | grep -q '#!/bin/bash'; then
    _pass
else
    _fail
fi

# 5. Check for comment header
_msg "Script has a comment header"
if head -n 3 "${script_path}" | grep -q '#'; then
    _pass
else
    _fail
fi

# 6. Check for USER_FULLNAME variable declaration
_msg "Script declares 'USER_FULLNAME' variable with quotes"
if grep -q 'USER_FULLNAME=".*"' "${script_path}"; then
    _pass
else
    _fail
fi

# 7. Check for DATE variable declaration with command substitution
_msg "Script declares 'DATE' variable with command substitution"
if grep -q 'DATE=$(date)' "${script_path}"; then
    _pass
else
    _fail
fi

# 8. Check for CURRENT_DIR variable declaration with command substitution
_msg "Script declares 'CURRENT_DIR' variable with command substitution"
if grep -q 'CURRENT_DIR=$(pwd)' "${script_path}"; then
    _pass
else
    _fail
fi

# 9. Check if the script is executable
_msg "Script is executable"
if [[ -x "${script_path}" ]]; then
    _pass
else
    _fail
fi

# 10. Check if the output file exists
_msg "Output file '~/reports/script-output.log' exists"
if [[ -f "${output_path}" ]]; then
    _pass
else
    _fail
fi

# 11. Check if the output file has the expected content
_msg "Output file content is correct"
# Note: The content check is approximate since date and pwd are dynamic.
# We check for the presence of keywords and the expected number of lines.
if [[ $(wc -l < "${output_path}") -eq 3 ]] && \
   grep -q "Report Generated by:" "${output_path}" && \
   grep -q "Today's Date:" "${output_path}" && \
   grep -q "Current Working Directory:" "${output_path}"; then
    _pass
else
    _fail
fi

# --- Grade Calculation & Reporting ---

_print_line
if [[ ${total_questions} -gt 0 ]]; then
    grade=$(echo "scale=2; (100 / ${total_questions}) * ${correct_answers}" | bc -l)
    printf "${CP}Assignment ${assignment} Result: ${CG}%d%%${CW} (%d/%d checks passed)\n" \
           "$(printf '%.0f' ${grade})" \
           "${correct_answers}" \
           "${total_questions}"
else
    echo -e "${CR}No questions were checked. Grade cannot be calculated.${CW}"
    grade=0
fi
_print_line
source <(curl -s --fail -L -H 'Cache-Control: no-cache' "${ENCODER_SCRIPT_URL}") "${grade}" "${assignment}"
