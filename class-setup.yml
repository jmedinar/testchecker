---
- name: Preparing Student Workstation
  hosts: localhost
  connection: local
  gather_facts: true
  become: true

  vars:
    username: "{{ lookup('env', 'SUDO_USER') }}"
    rpmfusion: "https://download1.rpmfusion.org"
    repo_path: "https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/"
    wallpapers_linux:
      - linux-8k-ultra-hd-art_bWVnaGmUmZqaraWkpJRmZWdpZa1qbGtm.jpg
      - linux-os-bw_Z2hraG6UmZqaraWkpJRma2VlrWZnZWU.jpg
    wallpapers_containers:
      - onboarding-selkies-3ddb7cb6ee2cf9abed002b01f63b1822.png
      - renovations-21ad5798164b1bb1beceb19646b2a762.png
      - Microservices-Dockerization-1-2.png

  tasks:

    - name: Enabling extra repositories
      tags: repos
      block:

        - name: Visual Studio Code
          ansible.builtin.yum_repository:
            name: Code
            description: Visual Studio Code
            baseurl: https://packages.microsoft.com/yumrepos/vscode
            file: vscode
            enabled: true
            gpgcheck: true
            gpgkey: https://packages.microsoft.com/keys/microsoft.asc

        - name: Third party
          ansible.builtin.dnf:
            name: fedora-workstation-repositories
            state: present

        - name: Google Chrome
          ansible.builtin.yum_repository:
            name: google-chrome
            description: Google Chrome Repository
            baseurl: https://dl.google.com/linux/chrome/rpm/stable/$basearch
            enabled: true
            gpgcheck: true
            gpgkey: https://dl.google.com/linux/linux_signing_key.pub

        - name: RPM Fusion free GPG key
          ansible.builtin.rpm_key:
            key: "{{ rpmfusion }}/free/fedora/RPM-GPG-KEY-rpmfusion-free-fedora-2020"
            state: present

        - name: RPM Fusion Free
          ansible.builtin.dnf:
            name: "{{ rpmfusion }}/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm"
            state: present

        - name: RPM Fusion non-free GPG key
          ansible.builtin.rpm_key:
            key: "{{ rpmfusion }}/nonfree/fedora/RPM-GPG-KEY-rpmfusion-nonfree-fedora-2020"
            state: present

        - name: RPM Fusion Non-Free
          ansible.builtin.dnf:
            name: "{{ rpmfusion }}/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm"
            state: present

    - name: Installing packages for complete desktop
      tags: desktop_packages
      block:

        - name: Check if Zoom is already installed
          ansible.builtin.command: dnf info --installed zoom
          register: zoom_installed
          ignore_errors: true
          changed_when: false

        - name: Download Zoom if not installed
          ansible.builtin.get_url:
            url: https://zoom.us/client/latest/zoom_x86_64.rpm
            dest: /tmp/
            mode: '0744'
          when: zoom_installed.rc != 0

        - name: Install Zoom if not installed
          ansible.builtin.dnf:
            name: "/tmp/zoom_x86_64.rpm"
            state: present
            disable_gpg_check: true
          when: zoom_installed.rc != 0

        - name: Remove Zoom Package if downloadeda
          ansible.builtin.file:
            path: "/tmp/zoom_x86_64.rpm"
            state: absent
          when: zoom_installed.rc != 0

        - name: Multimedia Packages
          ansible.builtin.dnf:
            state: present
            skip_broken: true
            exclude:
              - gstreamer1-plugins-bad-free-devel
              - lame-devel
            name:
              - gparted
              - python3-xlib
              - "@multimedia"
              - lame
              - gstreamer1-plugin-openh264
              - gstreamer1-plugins-base-*
              - gstreamer1-plugins-good-*
              - gstreamer1-plugins-bad-*

    - name: Installing packages for containers
      tags: container_packages
      ansible.builtin.dnf:
        state: present
        skip_broken: true
        name:
          - yq
          - jq
          - pip
          - ansible
          - ansible-builder
          - vim-ansible
          - vim-syntastic-ansible
          - fzf
          - podman
          - ansible-collection-containers-podman
          - pcp-pmda-podman
          - podman-compose
          - containers-common-extra

    - name: Installing Extra Packages
      tags: extra_packages
      ignore_errors: true
      ansible.builtin.dnf:
        state: present
        skip_broken: true
        name:
          - geany
          - geany-plugins-*
          - geany-themes.noarch
          - gtkd-geany-tags.noarch
          - firefox
          - flatpak
          - gnome-tweaks
          - vim
          - wget
          - fuse-sshfs
          - terminator
          - git
          - ranger
          - powerline-fonts
          - fzf
          - code
          - kernel-devel
          - ncurses-devel
          - ncurses-libs
          - ncurses-static
          - ncurses
          - screen
          - bash-completion
          - libguestfs-bash-completion
          - stress-ng
          - pamtester
          - gparted

    - name: Setting up Configurations
      tags: configurations
      block:

        - name: Configure vimrc
          ansible.builtin.copy:
            dest: /etc/vimrc.local
            mode: "0644"
            owner: "root"
            group: "root"
            content: |
              syntax on
              set nocompatible
              set autoindent
              set smartindent
              set nowrap
              set expandtab
              set tabstop=3
              set softtabstop=3
              set shiftwidth=3
              set number
              set cursorline
              set cursorcolumn
              set showmatch
              set scrolloff=5
              set sidescrolloff=5
              set wildmenu
              set wildmode=longest:full
              set clipboard=unnamedplus
              set mouse=a
              set background=dark
              set laststatus=2
              set showcmd
              set title
              set paste
              set ignorecase
              set smartcase
              set incsearch
              set hlsearch
              set lazyredraw
              set ttyfast
              filetype plugin indent on
              let mapleader = ","
            force: false

        - name: Setup Testchecker Tool
          ansible.builtin.get_url:
            url: "{{ repo_path }}/testchecker.sh"
            dest: /usr/bin/testchecker
            mode: '0755'
            owner: root
            group: root

        - name: Setup Alias for Testchecker Tool
          ansible.builtin.lineinfile:
            path: "/home/{{ username }}/.bashrc"
            line: 'alias testchecker="sudo testchecker"'
            mode: '0640'
            create: true

        - name: Get final scripts
          ansible.builtin.get_url:
            url: "{{ repo_path }}/{{ item }}"
            dest: /usr/bin/
            mode: "0755"
            owner: root
            group: root
          no_log: true
          loop:
            - finals/launcher
            - finals/final
            - finals/testlauncher.yml

        - name: Setup Module5 Requirements
          ansible.builtin.file:
            path: /sysadm/bin
            state: directory
            mode: '755'
            owner: "{{ username }}"
            group: "{{ username }}"

        - name: Download Challenges
          ansible.builtin.get_url:
            url: "{{ repo_path }}/{{ item }}"
            dest: /sysadm/bin/
            mode: '0755'
            owner: "{{ username }}"
            group: "{{ username }}"
          no_log: true
          loop:
            - challenges/challenge1.sh
            - challenges/challenge2.sh
            - challenges/challenge3.sh
            - challenges/challenge4.sh
            - challenges/challenge5.sh
            - challenges/challenge6.sh
            - challenges/challenge7.sh
            - challenges/challenge8.sh
            - challenges/challenge9.sh
            - challenges/homeChecker.sh
            - challenges/passwordGenerator.sh
            - challenges/processFile.sh
            - challenges/rabbitJumps.sh
            - challenges/testString.sh
            - challenges/userValidator.sh

        - name: Setup Module6 Performance Init Installation
          no_log: true
          ansible.builtin.get_url:
            url: "{{ repo_path }}/performance/mod6-init.sh"
            dest: /usr/bin/mod6-init
            mode: '0755'
            owner: root
            group: root

    - name: Configure Security
      tags: security
      block:

        - name: Configure sudo without a password for user {{ username }}
          ansible.builtin.copy:
            dest: /etc/sudoers.d/{{ username }}
            content: "{{ username }} ALL=(ALL) NOPASSWD: ALL"
            mode: '0440'
            owner: root
            group: root

        - name: Append custom Bash prompt configuration to /etc/bashrc
          ansible.builtin.blockinfile:
            path: /etc/bashrc
            block: |
              rc="\[\e[31m\]"
              gc="\[\e[32m\]"
              rs="\[\e[0m\]"
              if [ $EUID -eq 0 ]
              then
                  export PS1="${rc}\u@\h \w${rs}# "
              else
                  export PS1="${gc}\u@\h \w${rs}\$ "
              fi
            marker: "# {mark} ANSIBLE MANAGED BLOCK - BASH PROMPT"
            owner: root
            group: root
            mode: '0644'

        - name: Set the hostname on Fedora
          ansible.builtin.hostname:
            name: "fedora"

        - name: Enable SSH Service
          ansible.builtin.service:
            name: sshd
            state: started
            enabled: true

    - name: Configure Cockpit
      become: true
      tags: cockpit
      block:

        - name: Install Cockpit
          ansible.builtin.dnf:
            name: cockpit*
            state: present
            skip_broken: true

        - name: Enable Cockpit
          ansible.builtin.service:
            name: cockpit
            state: started
            enabled: true

        - name: Open firewall for cockpit
          ansible.posix.firewalld:
            permanent: true
            port: 9090/tcp
            state: enabled

        - name: Remove root from disalowed users list
          ansible.builtin.lineinfile:
            path: /etc/cockpit/disallowed-users
            state: absent
            line: root

    - name: Configure Look & Feel
      tags: looks
      block:

        - name: Prepare look & feel folders
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: '0755'
            owner: "{{ username }}"
            group: "{{ username }}"
          loop:
            - '/home/{{ username }}/.icons'
            - '/home/{{ username }}/.themes'
            - '/home/{{ username }}/.wallpapers'

        - name: Set terminator configuration folder
          ansible.builtin.file:
            path: /etc/xdg/terminator
            state: directory
            mode: "0755"
            owner: root
            group: root

        - name: Download Terminator Configuration
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/config
            dest: "/etc/xdg/terminator/config"
            mode: '0666'
            owner: root
            group: root

        - name: Set Terminator custom-keybindings
          become: true
          become_user: "{{ username }}"
          vars:
            custom0: /org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/
          ansible.builtin.shell: |
            gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "['{{ custom0 }}']"
            gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:{{ custom0 }} name 'Terminator'
            gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:{{ custom0 }} command 'terminator'
            gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:{{ custom0 }} binding '<Super>t'
          environment:
            DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/1000/bus"
          changed_when: false

        - name: Set keybindings
          become: true
          become_user: "{{ username }}"
          ansible.builtin.shell: |
            gsettings set org.gnome.settings-daemon.plugins.media-keys home "['<Super>e']"
            gsettings set org.gnome.settings-daemon.plugins.media-keys www "['<Super>w']"
            gsettings set org.gnome.settings-daemon.plugins.media-keys control-center "['<Super>s']"
            gsettings set org.gnome.settings-daemon.plugins.media-keys search "['<Super>f']"
          environment:
            DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/1000/bus"
          changed_when: false

        - name: Set Window Icons Preferences
          become: true
          become_user: "{{ username }}"
          ansible.builtin.shell: |
            gsettings set org.gnome.desktop.wm.preferences button-layout 'appmenu:minimize,maximize,close'
          environment:
            DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/1000/bus"
          changed_when: false

        - name: Set Idle Delay Preferences
          become: true
          become_user: "{{ username }}"
          ansible.builtin.shell: |
            gsettings set org.gnome.desktop.session idle-delay 0
          environment:
            DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/1000/bus"
          changed_when: false

    - name: Configure looks and Icons
      tags: background
      become: true
      become_user: "{{ username }}"
      block:

        - name: Download Wallpapers
          ansible.builtin.get_url:
            url: "{{ item }}"
            dest: "/home/{{ username }}/.wallpapers/"
            mode: "0660"
            owner: "{{ username }}"
            group: "{{ username }}"
          loop:
            - https://images.wallpapersden.com/image/download/linux-8k-ultra-hd-art_bWVnaGmUmZqaraWkpJRmZWdpZa1qbGtm.jpg
            - https://images.wallpapersden.com/image/download/linux-os-bw_Z2hraG6UmZqaraWkpJRma2VlrWZnZWU.jpg
            - https://podman-desktop.io/assets/images/onboarding-selkies-3ddb7cb6ee2cf9abed002b01f63b1822.png
            - https://podman-desktop.io/assets/images/renovations-21ad5798164b1bb1beceb19646b2a762.png
            - https://middleware.io/wp-content/uploads/2022/03/Microservices-Dockerization-1-2.png

        - name: Set Launcher Icons for Linux
          become: true
          become_user: "{{ username }}"
          vars:
            a1: org.mozilla.firefox.desktop
            a2: terminator.desktop
            a3: ranger.desktop
            a4: geany.desktop
            a5: code.desktop
            a6: org.gnome.Nautilus.desktop
          ansible.builtin.shell: |
            gsettings set org.gnome.shell favorite-apps "['{{ a1 }}','{{ a2 }}','{{ a3 }}','{{ a4 }}','{{ a5 }}','{{ a6 }}']"
          environment:
            DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/1000/bus"
          changed_when: false

    - name: Configure wallpaper
      tags: containers_looks
      become: true
      become_user: "{{ username }}"
      block:

        - name: Pick a random wallpaper
          ansible.builtin.set_fact:
            selected_wallpaper: "{{ wallpapers_containers | random }}"

        - name: Set wallpaper
          become: true
          become_user: "{{ username }}"
          ansible.builtin.shell: |
            gsettings set org.gnome.desktop.background picture-uri "file:///home/{{ username }}/.wallpapers/{{ selected_wallpaper }}"
          environment:
            DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/1000/bus"
          changed_when: false

    - name: Configure wallpaper
      tags: linux_looks
      become: true
      become_user: "{{ username }}"
      block:

        - name: Pick a random wallpaper
          ansible.builtin.set_fact:
            selected_wallpaper: "{{ wallpapers_linux | random }}"

        - name: Set wallpaper
          become: true
          become_user: "{{ username }}"
          ansible.builtin.shell: |
            gsettings set org.gnome.desktop.background picture-uri "file:///home/{{ username }}/.wallpapers/{{ selected_wallpaper }}"
          environment:
            DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/1000/bus"
          changed_when: false

    - name: Final Touches
      become: true
      tags: final
      block:

        - name: Upgrade System
          ansible.builtin.dnf:
            name: '*'
            state: latest
            update_only: true
