---

- name: Preparing Student Workstation
  hosts: localhost
  gather_facts: true
  become: false

  vars:
    username: "{{ username }}"

  tasks:

    - name: Enabling extra repositories
      become: true
      tags: repos
      block:

        - name: Configure Visual Studio Code
          ansible.builtin.yum_repository:
            name: Code
            description: Visual Studio Code
            baseurl: https://packages.microsoft.com/yumrepos/vscode
            file: vscode
            enabled: true
            gpgcheck: true
            gpgkey: https://packages.microsoft.com/keys/microsoft.asc

        - name: Installing third party repositories
          ansible.builtin.dnf:
            name: fedora-workstation-repositories
            state: present

        - name: Enabling Google Chrome Repository
          ansible.builtin.yum_repository:
            name: google-chrome
            description: Google Chrome Repository
            baseurl: https://dl.google.com/linux/chrome/rpm/stable/$basearch
            enabled: true
            gpgcheck: true
            gpgkey: https://dl.google.com/linux/linux_signing_key.pub

        - name: Import RPM Fusion free repository GPG key
          ansible.builtin.rpm_key:
            key: https://download1.rpmfusion.org/free/fedora/RPM-GPG-KEY-rpmfusion-free-fedora-2020
            state: present

        - name: Import RPM Fusion non-free repository GPG key
          ansible.builtin.rpm_key:
            key: https://download1.rpmfusion.org/nonfree/fedora/RPM-GPG-KEY-rpmfusion-nonfree-fedora-2020
            state: present

        - name: Installing RPM Fusion Free repos
          ansible.builtin.dnf:
            name: https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm
            state: present

        - name: Installing RPM Fusion Non-Free repos
          ansible.builtin.dnf:
            name: https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm
            state: present

        - name: Add Vivaldi repository
          ansible.builtin.yum_repository:
            name: vivaldi
            description: Vivaldi browser repository
            baseurl: https://repo.vivaldi.com/archive/rpm/x86_64/
            gpgkey: https://repo.vivaldi.com/archive/linux_signing_key.pub
            gpgcheck: true
            enabled: true

    - name: Installing Extra Packages
      become: true
      tags: packages
      block:

        - name: Check if Zoom is already installed
          ansible.builtin.command: dnf info --installed zoom
          register: zoom_installed
          ignore_errors: true
          changed_when: false

        - name: Download Zoom if not installed
          tags: special_pkgs
          ansible.builtin.get_url:
            url: https://zoom.us/client/latest/zoom_x86_64.rpm
            dest: /tmp/
            mode: '0744'
          when: zoom_installed.rc != 0

        - name: Install Zoom if not installed
          tags: special_pkgs
          ansible.builtin.dnf:
            name: "/tmp/zoom_x86_64.rpm"
            state: present
            disable_gpg_check: true
          when: zoom_installed.rc != 0

        - name: Remove Zoom Package if downloaded
          tags: special_pkgs
          ansible.builtin.file:
            path: "/tmp/zoom_x86_64.rpm"
            state: absent
          when: zoom_installed.rc != 0

        - name: Workstation Packages
          tags: workstation_pkgs
          ansible.builtin.dnf:
            state: present
            name:
              - geany
              - geany-plugins-*
              - geany-themes.noarch
              - gtkd-geany-tags.noarch
              - firefox
              - google-chrome
              - flatpak
              - gnome-tweaks
              - gnome-extensions
              - vim
              - wget
              - fuse-sshfs
              - cockpit-*
              - vivaldi-stable
              - terminator

        - name: Development Packages
          tags: development_pkgs
          ansible.builtin.dnf:
            state: present
            name:
              - git
              - ranger
              - yq
              - jq
              - pip
              - ansible
              - ansible-builder
              - vim-ansible
              - vim-syntastic-ansible
              - powerline-fonts
              - fzf
              - podman
              - code
              - ansible-collection-containers-podman
              - pcp-pmda-podman
              - podman-compose
              - containers-common-extra
              - wireshark
              - nmap
              - kernel-devel
              - ncurses-devel
              - ncurses-libs
              - ncurses-static
              - ncurses
              - java-latest-openjdk.x86_64
              - screen
              - bash-completion
              - libguestfs-bash-completion
              - stress-ng
              - pamtester

        - name: Multimedia Packages
          tags: multimedia_pkgs
          ansible.builtin.dnf:
            state: present
            exclude:
              - gstreamer1-plugins-bad-free-devel
              - lame-devel
            name:
              - gparted
              - python3-xlib
              - "@multimedia"
              - lame
              - gstreamer1-plugin-openh264
              - gstreamer1-plugins-base-*
              - gstreamer1-plugins-good-*
              - gstreamer1-plugins-bad-*

    - name: Setting up Configurations
      tags: configurations
      block:

        - name: Get vimrc Copy
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/vimrc
            dest: /tmp/vimrc
            mode: '0644'

        - name: Configure vim for Regular User
          ansible.builtin.copy:
            src: /tmp/vimrc
            dest: /home/{{ username }}/.vimrc
            mode: '0644'
            owner: "{{ username }}"
            group: "{{ username }}"

        - name: Configure vim for the Administrator User
          become: true
          ansible.builtin.copy:
            src: /tmp/vimrc
            dest: ~/.vimrc
            mode: '0644'

        - name: Setup Testchecker Tool
          become: true
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/testchecker.sh
            dest: /usr/bin/testchecker
            mode: '0755'
            owner: root
            group: root

        - name: Setup Alias for Testchecker Tool
          ansible.builtin.lineinfile:
            path: "/home/{{ username }}/.bashrc"
            line: 'alias testchecker="sudo testchecker"'
            mode: '0640'
            create: true

        - name: Get final scripts
          become: true
          ansible.builtin.get_url:
            url: "{{ item }}"
            dest: /usr/bin/
            mode: "0755"
            owner: root
            group: root
          no_log: true
          loop:
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/finals/launcher
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/finals/final
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/finals/testlauncher.yml

        - name: Setup Module5 Requirements
          become: true
          ansible.builtin.file:
            path: /sysadm/bin
            state: directory
            mode: '755'
            owner: "{{ username }}"
            group: "{{ username }}"

        - name: Download Challenges
          ansible.builtin.get_url:
            url: "{{ item }}"
            dest: /sysadm/bin/
            mode: '0755'
            owner: "{{ username }}"
            group: "{{ username }}"
          no_log: true
          loop:
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge1.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge2.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge3.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge4.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge5.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge6.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge7.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge8.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge9.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/homeChecker.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/passwordGenerator.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/processFile.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/rabbitJumps.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/testString.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/userValidator.sh

        - name: Setup Module6 Performance Init Installation
          ansible.builtin.get_url:
            url: https://github.com/jmedinar/testchecker/blob/main/performance/mod6-init.sh
            dest: /usr/bin/mod6-init
            mode: '0755'
            owner: root
            group: root

    - name: Configure Security
      tags: security
      block:

        - name: Configure sudo without a password for user {{ username }}
          become: true
          ansible.builtin.copy:
            dest: /etc/sudoers.d/{{ username }}
            content: "{{ username }} ALL=(ALL) NOPASSWD: ALL"
            mode: '0440'
            owner: root
            group: root

        - name: Ensure .ssh directory exists
          ansible.builtin.file:
            path: /home/{{ username }}/.ssh
            state: directory
            owner: "{{ username }}"
            group: "{{ username }}"
            mode: '0700'

        - name: Append custom Bash prompt configuration to /etc/bashrc
          ansible.builtin.blockinfile:
            path: /etc/bashrc
            block: |
              rc="\[\e[31m\]"
              gc="\[\e[32m\]"
              rs="\[\e[0m\]"
              if [ $EUID -eq 0 ]
              then
                  export PS1="${rc}\u@\h \w${rs}# "
              else
                  export PS1="${gc}\u@\h \w${rs}\$ "
              fi
            marker: "# {mark} ANSIBLE MANAGED BLOCK - BASH PROMPT"
            owner: root
            group: root
            mode: '0644'

        - name: Set the hostname on Fedora
          ansible.builtin.hostname:
            name: "fedora"

    - name: Configure Services
      become: true
      tags: services
      block:

        - name: Enable Cockpit
          ansible.builtin.service:
            name: cockpit
            state: started
            enabled: true

        - name: Open firewall for cockpit
          ansible.posix.firewalld:
            permanent: true
            port: 9090/tcp
            state: enabled

        - name: Remove root from disalowed users list
          ansible.builtin.lineinfile:
            path: /etc/cockpit/disallowed-users
            state: absent
            line: root
        
        - name: Enable SSH
          ansible.builtin.service:
            name: sshd
            state: started
            enabled: true

    - name: Configure Look & Feel
      tags: looks
      block:

        - name: Prepare look & feel folders
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: '0755'
            owner: "{{ username }}"
            group: "{{ username }}"
          loop:
            - '/home/{{ username }}/.icons'
            - '/home/{{ username }}/.themes'
            - '/home/{{ username }}/.wallpapers'

        - name: Verify if wallpaper already exists
          ansible.builtin.stat:
            path: /home/{{ username }}/.wallpapers/yellow-black.jpg
          register: file_stat

        - name: Download Wallpaper
          ansible.builtin.get_url:
            url: https://wallpapers.com/images/hd/yellow-black-linux-penguin-logo-oow6y6sgknpmcdrz.jpg
            dest: '/home/{{ username }}/.wallpapers/yellow-black.jpg'
            mode: '0660'
            owner: "{{ username }}"
            group: "{{ username }}"
          when: not file_stat.stat.exists

        - name: Set TUX Wallpaper
          become: true
          become_user: "{{ username }}"
          ansible.builtin.shell: |
            gsettings set org.gnome.desktop.background picture-uri file:///home/{{ username }}/.wallpapers/yellow-black.jpg
          environment:
            DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/1000/bus"
          changed_when: false

        - name: Set terminator configuration folder
          ansible.builtin.file:
            path: /etc/xdg/terminator
            state: directory
            mode: "0755"
            owner: root
            group: root

        - name: Download Terminator Configuration
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/config
            dest: "/etc/xdg/terminator/config"
            mode: '0666'
            owner: root
            group: root

        - name: Set Launcher Icons
          become: true
          become_user: "{{ username }}"
          vars:
            a1: org.mozilla.firefox.desktop
            a2: terminator.desktop
            a3: ranger.desktop
            a4: geany.desktop
            a5: code.desktop
            a6: org.gnome.Nautilus.desktop
            a7: Zoom.desktop
            a8: org.gnome.Software.desktop
          ansible.builtin.shell: |
            gsettings set org.gnome.shell favorite-apps "['{{ a1 }}','{{ a2 }}','{{ a3 }}','{{ a4 }}','{{ a5 }}','{{ a6 }}','{{ a7 }}','{{ a8 }}']"
          environment:
            DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/1000/bus"
          changed_when: false

        - name: Set Terminator custom-keybindings
          become: true
          become_user: "{{ username }}"
          vars:
            custom0: /org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/
          ansible.builtin.shell: |
            gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "['{{ custom0 }}']"
            gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:{{ custom0 }} name 'Terminator'
            gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:{{ custom0 }} command 'terminator'
            gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:{{ custom0 }} binding '<Super>t'
          environment:
            DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/1000/bus"
          changed_when: false

        - name: Set keybindings
          become: true
          become_user: "{{ username }}"
          ansible.builtin.shell: |
            gsettings set org.gnome.settings-daemon.plugins.media-keys home "['<Super>e']"
            gsettings set org.gnome.settings-daemon.plugins.media-keys www "['<Super>w']"
            gsettings set org.gnome.settings-daemon.plugins.media-keys control-center "['<Super>s']"
            gsettings set org.gnome.settings-daemon.plugins.media-keys search "['<Super>f']"
          environment:
            DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/1000/bus"
          changed_when: false

        - name: Set Window Icons Preferences
          become: true
          become_user: "{{ username }}"
          ansible.builtin.shell: |
            gsettings set org.gnome.desktop.wm.preferences button-layout 'appmenu:minimize,maximize,close'
          environment:
            DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/1000/bus"
          changed_when: false

        - name: Set Idle Delay Preferences
          become: true
          become_user: "{{ username }}"
          ansible.builtin.shell: |
            gsettings set org.gnome.desktop.session idle-delay 0
          environment:
            DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/1000/bus"
          changed_when: false

    - name: Final Touches
      become: true
      tags: final
      block:

        - name: Upgrade System
          ansible.builtin.dnf:
            name: '*'
            state: latest
            update_only: true
