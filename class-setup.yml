---

- name: Configure Personal Workstation
  hosts: localhost
  gather_facts: true
  become: false

  vars:
    - username: "{{ username }}"

  tasks:

    - name: Enabling extra repositories
      become: true
      tags: repos
      block:

        - name: Configure Visual Studio Code
          ansible.builtin.yum_repository:
            name: Code
            description: Visual Studio Code
            baseurl: https://packages.microsoft.com/yumrepos/vscode
            file: vscode
            enabled: true
            gpgcheck: true
            gpgkey: https://packages.microsoft.com/keys/microsoft.asc

        - name: Installing third party repositories
          ansible.builtin.dnf:
            name: fedora-workstation-repositories
            state: present

        - name: Enabling Google Chrome Repository
          ansible.builtin.yum_repository: 
            name: google-chrome
            description: Google Chrome Repository
            baseurl: https://dl.google.com/linux/chrome/rpm/stable/$basearch
            enabled: true
            gpgcheck: true
            gpgkey: https://dl.google.com/linux/linux_signing_key.pub

        - name: Import RPM Fusion free repository GPG key
          ansible.builtin.rpm_key:
            key: https://download1.rpmfusion.org/free/fedora/RPM-GPG-KEY-rpmfusion-free-fedora-2020
            state: present

        - name: Import RPM Fusion non-free repository GPG key
          ansible.builtin.rpm_key:
            key: https://download1.rpmfusion.org/nonfree/fedora/RPM-GPG-KEY-rpmfusion-nonfree-fedora-2020
            state: present

        - name: Installing RPM Fusion Free repos
          ansible.builtin.dnf:
            name: https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm
            state: present

        - name: Installing RPM Fusion Non-Free repos
          ansible.builtin.dnf:
            name: https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm
            state: present

        - name: Add Vivaldi repository
          ansible.builtin.yum_repository:
            name: vivaldi
            description: Vivaldi browser repository
            baseurl: https://repo.vivaldi.com/archive/rpm/x86_64/
            gpgkey: https://repo.vivaldi.com/archive/linux_signing_key.pub
            gpgcheck: true
            enabled: true

    - name: Installing Extra Packages
      become: true
      tags: packages
      block:

        - name: Download Packages to Install
          tags: special_pkgs
          ansible.builtin.get_url:
            url: "{{ item }}"
            dest: /tmp/
          loop:
            - https://zoom.us/client/latest/zoom_x86_64.rpm

        - name: Install Downloaded Packages
          tags: special_pkgs
          ansible.builtin.dnf:
            name: "/tmp/{{ item }}"
            state: present
            disable_gpg_check: true
          loop:
            - zoom_x86_64.rpm

        - name: Remove Downloaded Packages
          tags: special_pkgs
          ansible.builtin.file:
            path: "/tmp/{{ item }}"
            state: absent
          loop:
            - zoom_x86_64.rpm

        - name: Workstation Packages
          tags: workstation_pkgs
          ansible.builtin.dnf:
            state: present
            name: 
              - geany
              - geany-plugins-*
              - geany-themes.noarch
              - gtkd-geany-tags.noarch
              - firefox
              - google-chrome
              - flatpak
              - gnome-tweaks
              - gnome-extensions
              - vim
              - wget
              - fuse-sshfs
              - cockpit-*
              - vivaldi-stable
              - terminator
              - xorg-x11-xauth

        - name: Development Packages
          tags: development_pkgs
          ansible.builtin.dnf:
            state: present
            name: 
              - git
              - ranger
              - yq
              - jq
              - pip
              - ansible
              - ansible-builder
              - vim-ansible
              - vim-syntastic-ansible
              - powerline-fonts
              - fzf
              - podman
              - code
              - ansible-collection-containers-podman
              - pcp-pmda-podman
              - podman-compose
              - podman-tests
              - podman-tui
              - containers-common-extra
              - wireshark
              - nmap
              - kernel-devel
              - ncurses-devel
              - ncurses-libs
              - ncurses-static
              - ncurses
              - java-latest-openjdk.x86_64
              - screen
              - bash-completion
              - libguestfs-bash-completion

        - name: Multimedia Packages
          tags: multimedia_pkgs
          ansible.builtin.dnf:
            state: present
            exclude:
              - gstreamer1-plugins-bad-free-devel
              - lame-devel
            name: 
              - gparted
              - python3-xlib
              - "@multimedia"
              - lame
              - gstreamer1-plugin-openh264
              - gstreamer1-plugins-base-*
              - gstreamer1-plugins-good-*
              - gstreamer1-plugins-bad-*

    - name: Setting up Configurations
      tags: configurations
      block:

        - name: Configure vim for Regular User
          ansible.builtin.copy:
            src: vimrc
            dest: ~/.vimrc
            backup: true
            mode: '0640'

        - name: Configure vim for the Administrator User
          become: true
          ansible.builtin.copy:
            src: vimrc
            dest: ~/.vimrc
            backup: true
            mode: '0640'

        - name: Creating Terminator Config Folder
          ansible.builtin.file:
            path: ~/.config/terminator/
            state: directory
            mode: '0744'
            owner: "{{ username }}"
            group: "{{ username }}"

        - name: Copying Terminator Configuration
          ansible.builtin.copy:
            src: terminator_config
            dest: ~/.config/terminator/config
            mode: '0644'
            owner: "{{ username }}"
            group: "{{ username }}"

        - name: Setup Testchecker Tool
          become: true
          ansible.builtin.get_url:
            src: https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/testchecker.sh
            dest: /usr/bin/testchecker
            mode: '0755'
            owner: root
            group: root
            
        - name: Setup Alias for Testchecker Tool
          ansible.builtin.lineinfile:
            path: "{{ ansible_user_dir }}/.bashrc"
            line: 'alias testchecker="sudo testchecker"'
            create: yes

        - name: Setup Module5 Requirements
          become: true
          ansible.builtin.file:
            path: /sysadm/bin
            state: directory
            mode: '755'
            owner: "{{ ansible_user }}"
            growp: "{{ ansible_user }}"

        - name: Download Challenges
          ansible.builtin.get_url:
            src: "{{ item }}"
            dest: /sysadm/bin/
            mode: '0755'
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
          loop:
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge1.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge2.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge3.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge4.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge5.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge6.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge7.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge8.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/challenge9.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/homeChecker.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/passwordGenerator.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/processFile.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/rabbitJumps.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/testString.sh
            - https://raw.githubusercontent.com/jmedinar/testchecker/refs/heads/main/challenges/userValidator.sh

        - name: Setup Module6 Performance Init Installation
          ansible.builtin.get_url:
            src: https://github.com/jmedinar/testchecker/blob/main/performance/mod6-init.sh
            dest: /usr/bin/mod6-init
            mode: '0755'
            owner: root
            group: root

    - name: Configure Security
      tags: security
      block:

        - name: Ensure {{ username }} can sudo without a password
          become: true
          ansible.builtin.copy:
            dest: /etc/sudoers.d/{{ username }}
            content: "{{ username }} ALL=(ALL) NOPASSWD: ALL"

        - name: Ensure .ssh directory exists
          ansible.builtin.file:
            path: /home/{{ username }}/.ssh
            state: directory
            owner: "{{ username }}"
            group: "{{ username }}"
            mode: '0700'

    - name: Configure Services
      become: true
      tags: services
      block:

        - name: Enable Cockpit
          ansible.builtin.service:
            name: cockpit
            state: started
            enabled: true

        - name: Open firewall for cockpit
          ansible.posix.firewalld:
            permanent: true
            port: 9090/tcp
            state: enabled

        - name: Remove root from disalowed users list
          ansible.builtin.lineinfile:
            path: /etc/cockpit/disallowed-users
            state: absent
            line: root

    #TODO: 

    - name: Configure Look & Feel
      tags: looks
      block:

        - name: Prepare look & feel folders
          ansible.builtin.file: 
            path: "{{ item }}"
            state: directory
            mode: '0755'
          loop:
            - '~/.icons'
            - '~/.themes'
            - '~/.wallpapers'

        - name: Download Wallpaper
          ansible.builtin.get_url:
            scr: https://wallpapers.com/images/hd/yellow-black-linux-penguin-logo-oow6y6sgknpmcdrz.jpg
            dest: '~/.wallpapers'
            mode: '0660'

        - name: Set TUX Wallpaper
          ansible.builtin.command: 
            cmd: |
              gsettings set org.gnome.desktop.background picture-uri file:///~/.wallpapers/yellow-black-linux-penguin-logo-oow6y6sgknpmcdrz.jpg
            environment:
              DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/{{ ansible_user_id }}/bus"  # Required for gsettings to work

    - name: Final Touches
      become: true
      tags: final
      block:

        - name: Upgrade all packages
          ansible.builtin.dnf:
            name: "*"
            state: latest
            update_cache: yes

