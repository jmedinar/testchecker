#!/usr/bin/env bash
# Author: Juan Medina
# Date: Mar 2025
# Description: Init for the Mid-Term and Final tests of the Linux class

# vars
version=$1
student_id=$2
username=$3
textfile="/tmp/exam.yml"

midterm_text() {
echo "
#=========================================================================
#                        C O L L I N   C O L L E G E
#=========================================================================

You are a Linux System Administrator at TuxQuack, Inc.

Your company is preparing for a major system upgrade, and you have
been tasked with setting up a new server environment, managing
users and groups, and ensuring proper file permissions and backups.

Your goal is to complete the following tasks to demonstrate your skills.

#===========================
#         Challenge         
#===========================

1. Create a new user with the username
    'midterm_${username}'
2. Add the user to the supplementary group 'wheel'
3. Set a password for the midterm user as 'password123!'
4. Create a directory named
    '/tuxquack-reports-${student_id}/'
5. Inside this directory create a folder for every month of the year
    'Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec'
6. In the folder corresponding to the current month create a file named
    'system-report-${username}.ini'
7. Populate the 'system-report-${username}.ini' using the
   following format and completing the requested information

'''
[general]
HOSTNAME: <hostname>
TOTAL_CPUS: <total count of CPUs>

[users]
LOGIN_USERS: <count of users that can log in to the system>
NO_LOGIN_USERS: <count of users with no_login shell in the system>
WHEEL_USERS: <count of users in the wheel group>
'''

8. Set the permissions for the 'tuxquack-reports-${student_id}'
   and everything within as 'rwx' only for the owner
9. Create a user named 'security-${username}', with the comment
   'security auditor' and make the user a member of the 'auditors'
   group.
10. Set the password for the user 'security-${username}' to 'P4ssw0rd!'
11. Grant the 'security-${username}' user sudo access by creating it's own
    custom '/etc/sudoers.d/security-${username}' file with the following content.

'security-${username} ALL=(ALL)  NOPASSWD:ALL'

#===========================
# Verification Instructions 
#===========================

1. Run the following command

'sudo testchecker ${version}'

2. Submit evidence of the verification by copying and pasting
   the entire output of the testchecker to Canvas as a TEXT ENTRY.

#         ~~~~~ USE Ctrl+x CLOSE THIS WINDOW ~~~~~'
"
}

final_text() {
echo "
#=========================================================================
#                        C O L L I N   C O L L E G E
#=========================================================================

You are a Linux System Administrator at TuxQuack, Inc.

Your company is experiencing performance issues that you need to diagnose,
fix and prevent in the future.

Your goal is to complete the following tasks to demonstrate your skills.

#===========================
#         Challenge         
#===========================

1. Identify the 'PPID' of the process 'stressing' the system
2. Determine which resource ('CPU', or 'MEM') is being impacted
3. Identify the 'largest' file open by the identified process
4. Use 'journalctl' to find the emergency '(emerg)'
   message generated by the process
5. Write a report named '~/performance-report-${username}.yml'
   with the format

process:
    PID: <PID here>
    NAME: <process name here>
    RESOURCE: <impacted resource type here>
    LARGEST_FILE: <largest open file name by the process here>
    LOGGED_MESSAGE: <the logged message here>

6. Install the 'Apache Web Server (httpd)'
7. Use 'systemctl' to 'Enable' and 'Start' the 'httpd.service'
8. Copy the 'performance-report-${username}.yml'
    to the '/var/www/html/' directory
9. Ensure the file at the html folder is own by the 'apache' user and group
10. In a web browser and you should be able to see the report at
    http://localhost/performance-report-${username}.yml

#===========================
# Verification Instructions 
#===========================

1. Run the following command

'sudo testchecker ${version}'

2. Submit evidence of the verification by copying and pasting
   the entire output of the testchecker to Canvas as a TEXT ENTRY.

#         ~~~~~ USE Ctrl+x CLOSE THIS WINDOW ~~~~~'
"
}

quotes=( 
    "The future belongs to those who believe in the beauty of their dreams."
    "Success is the sum of small efforts, repeated day in and day out."
    "Don't watch the clock; do what it does. Keep going."
    "You are never too old to set another goal or to dream a new dream."
    "The harder you work for something, the greater you'll feel when you achieve it."
    "Your time is limited, don't waste it living someone else's life."
    "Dream big, work hard, stay focused, and surround yourself with good people."
    "The pain you feel today will be the strength you feel tomorrow."
    "Don't stop until you're proud."
    "You don't have to be great to start, but you have to start to be great."
    "Believe you can, and you're halfway there."
    "Push yourself, because no one else is going to do it for you."
    "The only way to do great work is to love what you do."
    "Strive for progress, not perfection."
    "You are capable of more than you know."
    "Don't let what you cannot do interfere with what you can do."
    "Small steps every day lead to big results over time."
    "The key to success is to focus on goals, not obstacles."
    "Your education is a dress rehearsal for the life you want to lead."
    "Keep your eyes on the stars and your feet on the ground."
)

function midterm(){
    midterm_text > ${textfile}
}

function final(){
    final_text > ${textfile}
    if ! command -v stress-ng -V &>/dev/null; then sudo dnf install -yqq stress-ng &>/dev/null; fi
    if [[ "quiet" != $(ps -ef | grep stress-ng | grep -o quiet) ]]
    then
        procs=(cpu mem)
        case ${procs[$((RANDOM % ${#procs[@]}))]} in
            "cpu") stress-ng --quiet --timeout 2400 --cpu 1 &
                logger "Hey ${username} stress-ng-cpu is now impacting your CPU: ${quotes[$((RANDOM % ${#quotes[@]}))]}" -p user.emerg
                ;;
            "mem") stress-ng --quiet --timeout 2400 --vm 1 --vm-bytes 128M &
                logger "Hey ${username} stress-ng-vm is now impacting your MEMORY: ${quotes[$((RANDOM % ${#quotes[@]}))]}" -p user.emerg
                ;;
        esac
    fi
}

case ${version} in
    "midterm" ) midterm ;;
    "final" ) final ;;
esac

terminator -f -b -T "Linux Exam" -l exam
